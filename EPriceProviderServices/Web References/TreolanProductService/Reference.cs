//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Этот исходный текст был создан автоматически: Microsoft.VSDesigner, версия: 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace EPriceProviderServices.TreolanProductService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="B2BWebServiceSoap", Namespace="https://b2b.treolan.ru/Webservice2008/")]
    public partial class B2BWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ProductInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductInfoV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCargoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCargoByNumbOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSchetOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSchetPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveSchetOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public B2BWebService() {
            this.Url = global::EPriceProviderServices.Properties.Settings.Default.EPriceProviderServices_TreolanProductService_B2BWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ProductInfoCompletedEventHandler ProductInfoCompleted;
        
        /// <remarks/>
        public event ProductInfoV2CompletedEventHandler ProductInfoV2Completed;
        
        /// <remarks/>
        public event GetCargoListCompletedEventHandler GetCargoListCompleted;
        
        /// <remarks/>
        public event GetCargoByNumbCompletedEventHandler GetCargoByNumbCompleted;
        
        /// <remarks/>
        public event GetSchetCompletedEventHandler GetSchetCompleted;
        
        /// <remarks/>
        public event DeleteSchetPositionCompletedEventHandler DeleteSchetPositionCompleted;
        
        /// <remarks/>
        public event MoveSchetCompletedEventHandler MoveSchetCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://b2b.treolan.ru/Webservice2008/ProductInfo", RequestNamespace="https://b2b.treolan.ru/Webservice2008/", ResponseNamespace="https://b2b.treolan.ru/Webservice2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ProductInfo(string Login, string password, string Articul) {
            object[] results = this.Invoke("ProductInfo", new object[] {
                        Login,
                        password,
                        Articul});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ProductInfoAsync(string Login, string password, string Articul) {
            this.ProductInfoAsync(Login, password, Articul, null);
        }
        
        /// <remarks/>
        public void ProductInfoAsync(string Login, string password, string Articul, object userState) {
            if ((this.ProductInfoOperationCompleted == null)) {
                this.ProductInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductInfoOperationCompleted);
            }
            this.InvokeAsync("ProductInfo", new object[] {
                        Login,
                        password,
                        Articul}, this.ProductInfoOperationCompleted, userState);
        }
        
        private void OnProductInfoOperationCompleted(object arg) {
            if ((this.ProductInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductInfoCompleted(this, new ProductInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://b2b.treolan.ru/Webservice2008/ProductInfoV2", RequestNamespace="https://b2b.treolan.ru/Webservice2008/", ResponseNamespace="https://b2b.treolan.ru/Webservice2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ProductInfoV2(string Login, string password, string Articul) {
            object[] results = this.Invoke("ProductInfoV2", new object[] {
                        Login,
                        password,
                        Articul});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ProductInfoV2Async(string Login, string password, string Articul) {
            this.ProductInfoV2Async(Login, password, Articul, null);
        }
        
        /// <remarks/>
        public void ProductInfoV2Async(string Login, string password, string Articul, object userState) {
            if ((this.ProductInfoV2OperationCompleted == null)) {
                this.ProductInfoV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductInfoV2OperationCompleted);
            }
            this.InvokeAsync("ProductInfoV2", new object[] {
                        Login,
                        password,
                        Articul}, this.ProductInfoV2OperationCompleted, userState);
        }
        
        private void OnProductInfoV2OperationCompleted(object arg) {
            if ((this.ProductInfoV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductInfoV2Completed(this, new ProductInfoV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://b2b.treolan.ru/Webservice2008/GetCargoList", RequestNamespace="https://b2b.treolan.ru/Webservice2008/", ResponseNamespace="https://b2b.treolan.ru/Webservice2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCargoList(string Login, string password, string DateBeg, string DateEnd) {
            object[] results = this.Invoke("GetCargoList", new object[] {
                        Login,
                        password,
                        DateBeg,
                        DateEnd});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCargoListAsync(string Login, string password, string DateBeg, string DateEnd) {
            this.GetCargoListAsync(Login, password, DateBeg, DateEnd, null);
        }
        
        /// <remarks/>
        public void GetCargoListAsync(string Login, string password, string DateBeg, string DateEnd, object userState) {
            if ((this.GetCargoListOperationCompleted == null)) {
                this.GetCargoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCargoListOperationCompleted);
            }
            this.InvokeAsync("GetCargoList", new object[] {
                        Login,
                        password,
                        DateBeg,
                        DateEnd}, this.GetCargoListOperationCompleted, userState);
        }
        
        private void OnGetCargoListOperationCompleted(object arg) {
            if ((this.GetCargoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCargoListCompleted(this, new GetCargoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://b2b.treolan.ru/Webservice2008/GetCargoByNumb", RequestNamespace="https://b2b.treolan.ru/Webservice2008/", ResponseNamespace="https://b2b.treolan.ru/Webservice2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCargoByNumb(string Login, string password, long CargoNumb) {
            object[] results = this.Invoke("GetCargoByNumb", new object[] {
                        Login,
                        password,
                        CargoNumb});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCargoByNumbAsync(string Login, string password, long CargoNumb) {
            this.GetCargoByNumbAsync(Login, password, CargoNumb, null);
        }
        
        /// <remarks/>
        public void GetCargoByNumbAsync(string Login, string password, long CargoNumb, object userState) {
            if ((this.GetCargoByNumbOperationCompleted == null)) {
                this.GetCargoByNumbOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCargoByNumbOperationCompleted);
            }
            this.InvokeAsync("GetCargoByNumb", new object[] {
                        Login,
                        password,
                        CargoNumb}, this.GetCargoByNumbOperationCompleted, userState);
        }
        
        private void OnGetCargoByNumbOperationCompleted(object arg) {
            if ((this.GetCargoByNumbCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCargoByNumbCompleted(this, new GetCargoByNumbCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://b2b.treolan.ru/Webservice2008/GetSchet", RequestNamespace="https://b2b.treolan.ru/Webservice2008/", ResponseNamespace="https://b2b.treolan.ru/Webservice2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetSchet(string Login, string password, string SchetName) {
            object[] results = this.Invoke("GetSchet", new object[] {
                        Login,
                        password,
                        SchetName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetSchetAsync(string Login, string password, string SchetName) {
            this.GetSchetAsync(Login, password, SchetName, null);
        }
        
        /// <remarks/>
        public void GetSchetAsync(string Login, string password, string SchetName, object userState) {
            if ((this.GetSchetOperationCompleted == null)) {
                this.GetSchetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchetOperationCompleted);
            }
            this.InvokeAsync("GetSchet", new object[] {
                        Login,
                        password,
                        SchetName}, this.GetSchetOperationCompleted, userState);
        }
        
        private void OnGetSchetOperationCompleted(object arg) {
            if ((this.GetSchetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchetCompleted(this, new GetSchetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://b2b.treolan.ru/Webservice2008/DeleteSchetPosition", RequestNamespace="https://b2b.treolan.ru/Webservice2008/", ResponseNamespace="https://b2b.treolan.ru/Webservice2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteSchetPosition(string Login, string password, string XMLQuery) {
            object[] results = this.Invoke("DeleteSchetPosition", new object[] {
                        Login,
                        password,
                        XMLQuery});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSchetPositionAsync(string Login, string password, string XMLQuery) {
            this.DeleteSchetPositionAsync(Login, password, XMLQuery, null);
        }
        
        /// <remarks/>
        public void DeleteSchetPositionAsync(string Login, string password, string XMLQuery, object userState) {
            if ((this.DeleteSchetPositionOperationCompleted == null)) {
                this.DeleteSchetPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSchetPositionOperationCompleted);
            }
            this.InvokeAsync("DeleteSchetPosition", new object[] {
                        Login,
                        password,
                        XMLQuery}, this.DeleteSchetPositionOperationCompleted, userState);
        }
        
        private void OnDeleteSchetPositionOperationCompleted(object arg) {
            if ((this.DeleteSchetPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSchetPositionCompleted(this, new DeleteSchetPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://b2b.treolan.ru/Webservice2008/MoveSchet", RequestNamespace="https://b2b.treolan.ru/Webservice2008/", ResponseNamespace="https://b2b.treolan.ru/Webservice2008/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode MoveSchet(string Login, string password, string XMLQuery) {
            object[] results = this.Invoke("MoveSchet", new object[] {
                        Login,
                        password,
                        XMLQuery});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void MoveSchetAsync(string Login, string password, string XMLQuery) {
            this.MoveSchetAsync(Login, password, XMLQuery, null);
        }
        
        /// <remarks/>
        public void MoveSchetAsync(string Login, string password, string XMLQuery, object userState) {
            if ((this.MoveSchetOperationCompleted == null)) {
                this.MoveSchetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveSchetOperationCompleted);
            }
            this.InvokeAsync("MoveSchet", new object[] {
                        Login,
                        password,
                        XMLQuery}, this.MoveSchetOperationCompleted, userState);
        }
        
        private void OnMoveSchetOperationCompleted(object arg) {
            if ((this.MoveSchetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveSchetCompleted(this, new MoveSchetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ProductInfoCompletedEventHandler(object sender, ProductInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ProductInfoV2CompletedEventHandler(object sender, ProductInfoV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductInfoV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductInfoV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCargoListCompletedEventHandler(object sender, GetCargoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCargoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCargoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCargoByNumbCompletedEventHandler(object sender, GetCargoByNumbCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCargoByNumbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCargoByNumbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSchetCompletedEventHandler(object sender, GetSchetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSchetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteSchetPositionCompletedEventHandler(object sender, DeleteSchetPositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSchetPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSchetPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void MoveSchetCompletedEventHandler(object sender, MoveSchetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveSchetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveSchetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591